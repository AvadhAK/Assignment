name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Cache Python dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-python-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-python-

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'  # Use a stable version of Python 3.10
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8

      - name: List Repository Files
        run: ls -R

      - name: Run linter
        run: flake8 Project/src/

  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'  # Use a stable version of Python 3.9
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r Project/requirements.txt
      
      - name: Set PYTHONPATH
        run: |
          export PYTHONPATH=$PYTHONPATH:${{ github.workspace }}/Project

      - name: List Repository Files
        run: ls -R

      - name: Run tests
        run: pytest Project/tests/

  deploy:
    runs-on: ubuntu-latest
    needs: [lint, test]  # Make deploy dependent on lint and test

    steps:
      # Checkout code
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Azure CLI
        uses: curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash  # This command installs Azure CLI
      
      - name: Log in to Azure using Personal Account
        run: |
          az login -u ${{ secrets.AZURE_USERNAME }} -p ${{ secrets.AZURE_PASSWORD }}
      
      
      # Set up Docker
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      # Log in to Azure Container Registry
      - name: Log in to ACR
        run: |
          az acr login --name ${{ secrets.ACR_NAME }}
      
      # Build and push Docker image to ACR
      - name: Build and push Docker image
        run: |
          docker build -t ${{ secrets.ACR_NAME }}.azurecr.io/myapp:latest .
          docker push ${{ secrets.ACR_NAME }}.azurecr.io/myapp:latest
      
      # Get AKS credentials
      - name: Get AKS credentials
        run: |
          az aks get-credentials --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} --name ${{ secrets.AKS_CLUSTER_NAME }}
      
      # Deploy to AKS
      - name: Deploy to AKS
        run: |
          kubectl apply -f kubernetes/deployment.yaml
          kubectl rollout status deployment/my-app-deployment
