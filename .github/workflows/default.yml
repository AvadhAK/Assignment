name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Cache Python dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-python-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-python-

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'  # Use a stable version of Python 3.10
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8

      - name: List Repository Files
        run: ls -R

      - name: Run linter
        run: flake8 Project/src/

  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'  # Use a stable version of Python 3.9
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r Project/requirements.txt
      
      - name: Set PYTHONPATH
        run: |
          export PYTHONPATH=$PYTHONPATH:${{ github.workspace }}/Project

      - name: List Repository Files
        run: ls -R

      - name: Run tests
        run: pytest Project/tests/

  deploy:
    runs-on: self-hosted
    needs: [lint, test]  # Make deploy dependent on lint and test

    steps:
      # Checkout code
      - name: Checkout code
        uses: actions/checkout@v4
      
      # Step 3: Install dependencies
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install mlflow

      # Step 4: Log MLflow Tracking URI
      - name: Set MLflow Tracking URI
        run: |
          echo "Setting MLflow tracking URI to local server"
          export MLFLOW_TRACKING_URI="http://127.0.0.1:5000"

      # Step 5: Register the model in MLflow
      - name: Register Model in MLflow
        env:
          MLFLOW_TRACKING_URI: http://127.0.0.1:5000
        run: |
          echo "Logging and registering model to MLflow"
          python - <<EOF
          import mlflow
          from mlflow.tracking import MlflowClient

          # Set tracking URI
          mlflow.set_tracking_uri('$MLFLOW_TRACKING_URI')

          # Define experiment name
          experiment_name = 'my-experiment'
          mlflow.set_experiment(experiment_name)

          # Log model
          with mlflow.start_run(run_name='model-deployment-run') as run:
              # Log artifact (model.pkl)
              mlflow.log_artifact('model.pkl', artifact_path='model_artifacts')

              # Register model
              model_uri = f'runs:/{run.info.run_id}/model_artifacts/model.pkl'
              mlflow.register_model(model_uri, 'my-registered-model')
          print('Model registered successfully!')
          EOF